import java.util.ArrayList;
import java.util.List;

public class PascalTriangle {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();

        if (numRows <= 0) {
            return triangle;
        }

        // First row
        triangle.add(new ArrayList<>());
        triangle.get(0).add(1);

        for (int rowNum = 1; rowNum < numRows; rowNum++) {
            List<Integer> row = new ArrayList<>();
            List<Integer> prevRow = triangle.get(rowNum - 1);

            // First element in the row is always 1
            row.add(1);

            // Calculate the middle elements
            for (int j = 1; j < rowNum; j++) {
                row.add(prevRow.get(j - 1) + prevRow.get(j));
            }

            // Last element in the row is always 1
            row.add(1);

            triangle.add(row);
        }

        return triangle;
    }

    public static void main(String[] args) {
        PascalTriangle pascalTriangle = new PascalTriangle();

        // Example 1
        int numRows1 = 5;
        List<List<Integer>> result1 = pascalTriangle.generate(numRows1);
        System.out.println(result1);

        // Example 2
        int numRows2 = 1;
        List<List<Integer>> result2 = pascalTriangle.generate(numRows2);
        System.out.println(result2);
    }
}
//problem    Easy 3
//Alva's inistute of engineering  and Technology
//ananyapaul369@gmail.com
