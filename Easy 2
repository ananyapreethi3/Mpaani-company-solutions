class TreeNode {
    int val;
    TreeNode left, right;

    public TreeNode(int val) {
        this.val = val;
        this.left = this.right = null;
    }
}

public class SortedArrayToBST {
    public TreeNode sortedArrayToBST(int[] nums) {
        if (nums == null || nums.length == 0) {
            return null;
        }

        return sortedArrayToBST(nums, 0, nums.length - 1);
    }

    private TreeNode sortedArrayToBST(int[] nums, int start, int end) {
        if (start > end) {
            return null;
        }

        int mid = start + (end - start) / 2;

        TreeNode root = new TreeNode(nums[mid]);
        root.left = sortedArrayToBST(nums, start, mid - 1);
        root.right = sortedArrayToBST(nums, mid + 1, end);

        return root;
    }

    public static void main(String[] args) {
        SortedArrayToBST sortedArrayToBST = new SortedArrayToBST();

        // Example 1
        int[] nums1 = {-10, -3, 0, 5, 9};
        TreeNode result1 = sortedArrayToBST.sortedArrayToBST(nums1);
        // Print the result or use other methods to visualize the tree
        System.out.println(result1);

        // Example 2
        int[] nums2 = {1, 3};
        TreeNode result2 = sortedArrayToBST.sortedArrayToBST(nums2);
        // Print the result or use other methods to visualize the tree
        System.out.println(result2);
    }
}
//problem    Easy 2
//Alva's inistute of engineering  and Technology
//ananyapaul369@gmail.com
